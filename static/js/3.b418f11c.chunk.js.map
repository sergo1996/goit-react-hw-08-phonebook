{"version":3,"sources":["components/ContactList/transitions.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/Contact/Contact.js","components/ContactList/ContactList.js","views/ContactsView.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","className","styles","contactForm","onSubmit","htmlFor","contactFormItem","type","id","onChange","contactBtn","Component","mapDispatchToProps","contactsOperations","addContact","connect","onChangeFilter","contactsActions","changeFilter","contactsSelectors","getFilter","filterContainer","filterName","filterField","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","getChildMapping","children","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","self","ReferenceError","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","component","childFactory","_objectWithoutPropertiesLoose","React","createElement","TransitionGroupContext","Provider","propTypes","defaultProps","ownProps","contact","getContactById","dispatch","onRemove","removeContact","contactData","button","onClick","contacts","getVisibleContacts","contactList","CSSTransition","classNames","transitions","timeout","uuidv4","ContactsView","isAuthenticated","onFetchContacts","history","replace","Logo","fetchContacts","isLoadingContacts","getLoading","authSelectors"],"mappings":"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","file":"static/js/3.b418f11c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transitions_enter__3N-As\",\"enterActive\":\"transitions_enterActive__17T7H\",\"exit\":\"transitions_exit__2bMCj\",\"exitActive\":\"transitions_exitActive__15W6g\"};","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport contactsOperations from '../../redux/contacts/contactsOperations'\nimport styles from './ContactForm.module.css'\n\nclass ContactForm extends Component{\n\n    state={\n        name:'',\n        number:''\n    }\n\n\n    handleChange= e => {\n        const {name, value } = e.target\n            this.setState({[name]:value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const {name,number} = this.state\n        if (name && number){\n        this.props.onAddContact(name,number)\n        this.setState({name:'', number:''})\n        } \n    }\n\n    render(){\n        const {name, number} = this.state\n        return(\n            <>\n            \n            <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n            <label \n                htmlFor='name'\n                className={styles.contactFormItem}\n\n                >Name</label>\n            <input\n                className={styles.contactFormItem}\n                type='text'\n                id='name'\n                name='name'\n                value={name}\n                onChange={this.handleChange}\n                \n            />\n            <label \n                htmlFor='phone'\n                className={styles.contactFormItem}\n            >Phone</label>\n\n            <input\n            className={styles.contactFormItem}\n            type='text'\n            id='phone'\n            name='number'\n            value={number}\n            onChange={this.handleChange}\n            />\n\n            <button \n            className={styles.contactBtn}\n            >Add contact</button>\n\n            </form>\n            </>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    onAddContact: contactsOperations.addContact\n}\n\nexport default connect(null,mapDispatchToProps)(ContactForm)","import React from 'react'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../redux/contacts/contactsActions'\nimport styles from './Filter.module.css'\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\n\nconst Filter = ({value, onChangeFilter}) =>(\n    <div className={styles.filterContainer}>\n    <label className={styles.filterName} htmlFor='filter'>Find contacts by name</label>\n    <input\n    className={styles.filterField}\n    type='text'\n    value={value}\n    onChange={e=> onChangeFilter(e.target.value)}\n    id='filter'/>\n    </div>\n)\n\nconst mapStateToProps = (state) =>({\n    value: contactsSelectors.getFilter(state)\n})\n\nconst mapDispatchToProps = {\n    onChangeFilter: contactsActions.changeFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChangeFilter: PropTypes.func\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react'\nimport styles from './Contact.module.css'\nimport {connect} from 'react-redux'\nimport contactsOperations from '../../redux/contacts/contactsOperations'\nimport PropTypes from 'prop-types';\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\n\nconst Contact = ({name,number , onRemove}) => {\n    // console.log('Comtact re-render', name)\n    return(\n    <li className={styles.contact}>\n    <p className={styles.contactData}>{name}</p>\n    <p className={styles.contactData}>{number}</p>\n    <button \n    className={styles.button} \n    onClick={onRemove}\n    >X</button>\n    </li>\n    \n    )}\n\nconst mapStateToProps = (state,ownProps) => {\n    const contact = contactsSelectors.getContactById(state, ownProps.id)\n \n return {...contact}\n};\n\n\nconst mapDispatchToProps = (dispatch, ownProps) =>({\n    onRemove: () => dispatch(contactsOperations.removeContact(ownProps.id))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Contact);\n\n\nContact.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onRemove: PropTypes.func\n}","import React from 'react'\nimport {connect} from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition , TransitionGroup} from 'react-transition-group'\n// import PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact'\nimport styles from './ContactList.module.css'\nimport transitions from './transitions.module.css'\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\n\nconst ContactList = ({contacts}) => {\n    return(\n    <TransitionGroup component='ul' className={styles.contactList}>\n    {contacts.map(contact => \n        \n    <CSSTransition \n        classNames={transitions}\n        timeout={200}\n        key={uuidv4()}> \n        \n        <Contact id={contact.id}/>\n       \n    </CSSTransition> )}\n    </TransitionGroup>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return ({ contacts: contactsSelectors.getVisibleContacts(state) })\n}\n\n\n\nexport default connect(mapStateToProps)(ContactList);\n\n// ContactList.propTypes = {\n//     contacts: PropTypes.shape(PropTypes.string.isRequired),\n\n// }\n\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {contactsOperations, contactsSelectors} from '../redux/contacts'\nimport {authSelectors} from '../redux/auth'\nimport Logo from '../components/Logo/Logo'\nimport ContactForm from '../components/ContactForm/ContactForm'\nimport Filter from '../components/Filter/Filter'\nimport ContactList from '../components/ContactList/ContactList'\n\n\nclass ContactsView extends Component {\n    componentDidMount(){\n      if(!this.props.isAuthenticated){\n        this.props.history.replace('/login')\n        return\n      }\n        this.props.onFetchContacts();\n      }\n    componentDidUpdate(){\n      if(!this.props.isAuthenticated){\n        this.props.history.replace('/login')\n        return\n      }\n    }  \n    render(){\n    return(\n    <>\n        <Logo name={'Phonebook'}/>\n        <ContactForm/>\n        <Filter/>\n        <ContactList/>\n    </>)}\n}\n\nconst mapStateToProps = state => ({\n    isLoadingContacts: contactsSelectors.getLoading(state),\n    isAuthenticated: authSelectors.isAuthenticated(state)\n  })\n  \n  const mapDispatchToProps = {\n    onFetchContacts: contactsOperations.fetchContacts,\n    \n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3NfQd\",\"contactFormItem\":\"ContactForm_contactFormItem__3hwc2\",\"contactBtn\":\"ContactForm_contactBtn__2UiMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__3YOJp\",\"filterName\":\"Filter_filterName__1U98j\",\"filterField\":\"Filter_filterField__2Excw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__38ON3\",\"button\":\"Contact_button__1R44_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__qwDz7\",\"contact\":\"ContactList_contact__2Sr8o\",\"button\":\"ContactList_button__1dsIO\"};"],"sourceRoot":""}